################################################################################
REST API
################################################################################

Rough template of API commands for EGAAS.

The command is called when **/api/v1/command/[param]** is accessed, where **command** is the command name, **param** is an optional parameter, for example, the name of the resource being changed or received. The server response is represented in JSON format.

In each response, the **error** parameter is returned, which is empty if the command is successfully executed or contains an error text. 
*Is it required to enter additional response codes other than 200?*
Such as Bad Request (400), Unauthorized (401), Not Found (404). 
Except the error field, all commands that send transactions also return the **hash** field with the hash of that posted transaction. Then, with this hash and the **txstatus** command, you can get the number of the blockchain where the transaction or processing error was sealed.

At this point, at the first request, the server opens a session for that user and returns it to Cookie in gosessionix. Therefore, for current compatibility, you need to pass this cookie value additionally with each request. For example, **Cookie: gosessionid=34673476347834**. Subsequently, you can go to JWT https://jwt.io/

********************************************************************************
Common API commands
********************************************************************************

getuid
==============================
**GET** Returns a unique value , which you need to sign with your private key and send back to the server using the **auth** command.

.. code:: 
    
    GET
    /api/v1/getuid
    
    Possible response
    
    .. code:: 
    
    200 (OK)
    Content-Type: application/json
    {
        "uid": "28726874268427424",
        "error": ""
    }
    
login
==============================
**POST** User authentication. You first need to call the **getuid** command to get a unique value and sign it. If successful, the corresponding address is returned in the format XXXX-XXXX-...-XXX. If 0 is specified as the ecosystem identifier, then the commands that work within the ecosystem will be unavailable.

.. code:: 
    
    POST
    /api/v1/login
    pubkey: hex public key
    signature: hex signed uid
    state: state identifier
    
    Possible response

.. code:: 
    
    200 (OK)
    Content-Type: application/json
    {
        "address": "1234-....-3424",
        "error": ""
    } 
    
    signtest
==============================
**POST** Команда подписывает строку указанным приватным ключом. Должна использоваться исключительно для тестирования API, так как в реальной работе приватный ключ не должен передаваться на сервер. Возвращается параметр *signature* - подпись в шестнадцатеричном виде и *pubkey* - публичный ключ для данного приватного ключа.

.. code:: 
    
    POST
    /api/v1/signtest
    private: hex приватный ключ
    forsign: строка для подписи
    pubkey: hex публичный ключ
    
Вариант ответа

.. code:: 
    
    200 (OK)
    Content-Type: application/json
    {
        "signature": "0011fa...",
        "pubkey": "324bd7..."
    }      



    
